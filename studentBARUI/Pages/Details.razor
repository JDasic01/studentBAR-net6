@page "/Details/{Id}"
@inject IPostData postData
@inject NavigationManager navManager

<h1>Suggestion Details</h1>

<div>
    <div>
        @if(post is not null)
        {
            <div>
                <div>
                    <div>
                        <div>@GetUpvoteTopText()</div>
                        <span class = "oi oi-caret-top"></span>
                        <div>@GetUpvoteBottomText()</div>
                    </div>
                    <div>
                        <div>@post.DateCreated.ToString("MM.dd.yyyy")</div>
                    </div>
                </div>
                <div>
                    <div>@post.Post</div>
                    <div>@post.Author.displayName</div>
                    <div>@post.Description</div>
                    <div>
                        @post.Faculty.FacultyName
                    </div>
                </div>
                <div>
                    <button @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id{ get; set; }

    private PostModel post;

    protected async override Task OnInitializedAsync()
    {
        post = await postData.GetPosts(Id);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

     private string GetUpvoteTopText()
    {
        if(post.UserVotes?.Count>0)
        {
            return post.UserVotes.Count.ToString("00");
        }
        else
        {
            return "Click to";
        }
    }

    private string GetUpvoteBottomText()
    {
        if(post.UserVotes?.Count>1)
        {
            return "Upvotes";
        }
        else
        {
            return "Upvote";
        }
    }

}